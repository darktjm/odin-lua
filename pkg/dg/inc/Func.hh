/* dg-analyze.c */
extern void Set_FTClasses(void);
extern boolean Is_Output(tp_FilTyp, tp_Tool);
extern void Make_DrvEdgs(void);
extern void Make_PrmTypLsts(void);
/* dg-build.c */
extern void Init_InpSpcs(void);
extern void Build_DerivationGraph(tp_FileName, tp_Package);
extern void Write_ENV(void);
extern void Write_DerivationGraph(void);
/* dg-edg-c */
extern void Clear_EdgFlags(void);
extern tp_FilTyp EqvEdg_FilTyp(tp_EqvEdg);
extern tp_EqvEdg EqvEdg_Next(tp_EqvEdg);
extern tp_FilTyp EqvEdg_FrmFilTyp(tp_EqvEdg);
extern tp_EqvEdg EqvEdg_FrmNext(tp_EqvEdg);
extern tp_FilTyp CastEdg_FilTyp(tp_CastEdg);
extern tp_CastEdg CastEdg_Next(tp_CastEdg);
extern tp_FilTyp DrvEdg_FrmFilTyp(tp_DrvEdg);
extern tp_DrvEdg DrvEdg_FrmNext(tp_DrvEdg);
extern tp_DrvEdg DrvEdg_Next(tp_DrvEdg);
extern tp_FilTyp InpEdg_FilTyp(tp_InpEdg);
extern tp_InpEdg InpEdg_Next(tp_InpEdg);
extern void Add_InpEdg(tp_InpSpc, tp_InpKind, boolean, tp_Tool);
extern void Add_HomInpEdg(tp_InpSpc, tp_Tool);
extern boolean HasInput(tp_Tool);
extern void Set_SystemTool_InpKinds(tp_Tool, tp_InpKind);
extern void Set_SystemTool_InpKind(tp_Tool, int
                                   , tp_InpKind);
extern tp_FilTyp MemEdg_FilTyp(tp_MemEdg);
extern void Add_MemEdg(tp_FilTyp, tp_FilTyp);
extern void Add_EqvEdg(tp_FilTyp, tp_FilTyp);
extern void Add_CastEdg(tp_FilTyp, tp_FilTyp);
extern void Add_DrvEdg(tp_FilTyp, tp_FilTyp);
extern tp_PrmTypLst DrvEdg_PrmTypLst(tp_DrvEdg);
extern void Print_DrvEdg(tp_FilDsc, tp_DrvEdg);
extern void Print_MemEdgs(tp_FilDsc, tp_MemEdg);
extern void Write_Edgs(FILE *, FILE *);
/* dg-envvar.c */
extern void Init_EnvVars(void);
extern tp_EnvVar Lookup_EnvVar(tp_Str);
extern tp_Desc EnvVar_Desc(tp_EnvVar);
extern void Set_EnvVar_Desc(tp_EnvVar, tp_Desc, boolean);
extern void Set_EnvVar_Default(tp_EnvVar, tp_Str, boolean);
extern tp_EnvVarLst EnvVarLst_Next(tp_EnvVarLst);
extern tp_EnvVarLst Make_EnvVarLst(tp_EnvVar);
extern tp_EnvVarLst Union_EnvVarLst(tp_EnvVarLst, tp_EnvVarLst);
extern void Print_EnvVarLst(tp_FilDsc, tp_EnvVarLst);
extern void Write_EnvVars(FILE *, FILE *);
extern tp_InpSpc New_InpSpc(void);
extern void Set_InpSpc_FilTyp(tp_InpSpc, tp_FilTyp);
extern tp_PrmTyp InpSpc_PrmTyp(tp_InpSpc);
extern void Set_InpSpc_PrmTyp(tp_InpSpc, tp_PrmTyp);
extern tp_InpSpc InpSpc_Next(tp_InpSpc);
extern void Write_InpSpcs(FILE *, FILE *);
/* dg-filtyp.c */
extern void Init_FilTyps(void);
extern void Set_Tool(tp_FilTyp, tp_Tool);
extern tp_Desc FilTyp_Desc(tp_FilTyp);
extern void Set_FilTyp_Desc(tp_FilTyp, tp_Desc, boolean);
extern int FilTyp_Index(tp_FilTyp);
extern boolean Has_SubTypes(tp_FilTyp);
extern tp_FilTyp Create_StructFilTyp(tp_Package, tp_FTName);
extern tp_FilTyp Create_OutputFilTyp(tp_Package, tp_Package, tp_FTName);
extern tp_FilTyp Lookup_SecOrdFilTyp(tp_FTName, tp_FilTyp);
extern tp_FilTyp Lookup_FilTyp(tp_FTName);
extern tp_SrcTyp Lookup_SrcTyp(tp_Pattern, boolean);
extern void Set_SrcTyp_FilTyp(tp_SrcTyp, tp_FilTyp);
extern tp_FilTyp SrcTyp_FilTyp(tp_SrcTyp);
extern tp_FilTyp Key_FilTyp(tp_Key);
extern void Clear_FilTypFlags(void);
extern void Print_Info(tp_FilDsc);
extern void Print_FilTyp(tp_FilDsc, tp_FilTyp);
extern void Write_FilTyps(FILE *, FILE *);
/* dg-main.c */
extern int main(int, char **);
/* dg-prmtyp.c */
extern void Init_PrmTyps(void);
extern tp_PTName PrmTyp_PTName(tp_PrmTyp);
extern tp_Desc PrmTyp_Desc(tp_PrmTyp);
extern void Set_PrmTyp_Desc(tp_PrmTyp, tp_Desc, boolean);
extern tp_FilTyp PrmTyp_FilTyp(tp_PrmTyp);
extern void Set_PrmTyp_FilTyp(tp_PrmTyp, tp_FilTyp);
extern tp_PrmTyp Lookup_PrmTyp(tp_PTName);
extern void Print_PrmTyp(tp_FilDsc, tp_PrmTyp);
extern tp_PrmTypLst PrmTypLst_Next(tp_PrmTypLst);
extern tp_PrmTypLst Make_PrmTypLst(tp_PrmTyp);
extern tp_PrmTypLst Union_PrmTypLst(tp_PrmTypLst, tp_PrmTypLst);
extern void Print_PrmTypLst(tp_FilDsc, tp_PrmTypLst);
extern void Write_PrmTyps(FILE *, FILE *);
/* dg-tool.c */
extern tp_Tool New_Tool(void);
extern void Init_Tools(void);
extern tp_EnvVarLst Tool_EnvVarLst(tp_Tool);
extern void Set_Tool_EnvVarLst(tp_Tool, tp_EnvVarLst);
extern void Clear_ToolFlags(void);
extern tp_Str Tool_Name(tp_Tool);
extern boolean IsDummy_Tool(tp_Tool);
extern void Write_Tools(FILE *, FILE *);
/* dg-valid.c */
extern void Validate_DerivationGraph(void);
/* dg-yylex.c */
extern void Init_Parse(void);
extern void ParseError(tp_Str);
extern void Init_Lex(void);
extern void EndLex(void);
extern int YY_Lex(void);
extern void YY_Unparse(tp_Str, tp_Nod);
/* drvgrf.yacc.c */
extern tp_Nod YY_Parse(void);
extern void yyerror(char *);
extern int yylex(void);
extern int yyparse(void);
/* if-drvpth.c */
extern void AppendDrvPth(tp_DrvPth *, tp_DrvPth);
extern tp_DrvPth FilTyp_Cast_DrvPth(tp_FilTyp);
extern tp_DrvPth FilTyp_Eqv_DrvPth(tp_FilTyp);
extern tp_DrvPth FilTyp_Drv_DrvPth(tp_FilTyp, tp_DrvEdg);
extern void Ret_DrvPth(tp_DrvPth);
extern tp_DPType DrvPth_DPType(tp_DrvPth);
extern tp_FKind DrvPth_FKind(tp_DrvPth);
extern tp_FilTyp DrvPth_FilTyp(tp_DrvPth);
extern tp_DrvEdg DrvPth_DrvEdg(tp_DrvPth);
extern tp_DrvPth DrvPth_Next(tp_DrvPth);
/* if-ft.c */
extern boolean IsPntr_FKind(tp_FKind);
extern boolean CanPntrHo_FKind(tp_FKind);
extern boolean IsATgt_FKind(tp_FKind);
extern boolean IsVTgt_FKind(tp_FKind);
extern boolean IsATgtText_FKind(tp_FKind);
extern boolean IsVTgtText_FKind(tp_FKind);
extern boolean IsExternal_Tool(tp_Tool);
extern tp_FTName FilTyp_ShortFTName(tp_FilTyp);
extern tp_FTName FilTyp_FTName(tp_FilTyp);
extern tp_MemEdg FilTyp_MemEdg(tp_FilTyp);
extern tp_CastEdg FilTyp_CastEdg(tp_FilTyp);
extern tp_PrmTypLst FilTyp_MapPrmTypLst(tp_FilTyp);
extern tp_FilTyp FilTyp_ArgFilTyp(tp_FilTyp);
extern tp_Tool FilTyp_Tool(tp_FilTyp);
extern boolean IsCopy_FilTyp(tp_FilTyp);
extern boolean IsGrouping_FilTyp(tp_FilTyp);
extern boolean IsGroupingInput_FilTyp(tp_FilTyp);
extern boolean IsSecOrd_FilTyp(tp_FilTyp);
extern boolean IsRecurse_FilTyp(tp_FilTyp);
extern boolean IsExec_FilTyp(tp_FilTyp);
extern boolean IsVoid_FilTyp(tp_FilTyp);
extern boolean IsAtmc_FilTyp(tp_FilTyp);
extern boolean IsPntr_FilTyp(tp_FilTyp);
extern int IsList_FilTyp(tp_FilTyp);
extern boolean IsDrvDir_FilTyp(tp_FilTyp);
extern boolean IsStruct_FilTyp(tp_FilTyp);
extern boolean IsStructMem_FilTyp(tp_FilTyp);
extern boolean IsGeneric_FilTyp(tp_FilTyp);
extern boolean IsPipe_FilTyp(tp_FilTyp);
/* if-lvl.c */
extern boolean IsSubType(tp_FilTyp, tp_FilTyp);
extern void Do_Search(tp_DrvPth *, boolean *, tp_FKind, tp_FilTyp,
                      tp_FilTyp);
/* if.err.c */
extern void Init_Err(void);
extern void Set_IPC_Err(boolean);
extern void Set_ErrFile(tp_FileName, boolean, tp_FilDsc);
extern void Save_ErrFile(tp_FileName *, boolean *, tp_FilDsc *);
extern boolean IsErr(void);
extern void Reset_Err(void);
extern void Increment_Errors(void);
extern int Num_Errors(void);
extern void SysCallError(tp_FilDsc, char *);
extern void FatalError(char *, char *, int);
extern void SystemError(char *, ...);
extern void Local_ErrMessage(tp_Str);
extern void fatal_err(char *);
/* if-file.c */
extern void Set_ModeMask(tp_FileName);
/* extern void Get_FileInfo(tp_SKind * ,int * ,tp_FileName); */
extern void MakePlnFile(boolean *, tp_FileName);
extern void MakeDirFile(boolean *, tp_FileName);
extern void GetWorkingDir(boolean *, tp_FileName);
extern void ChangeDir(boolean *, tp_FileName);
extern boolean IsExecutable(tp_FileName);
extern void MakeExecutable(tp_FileName);
extern void MakeReadOnly(boolean *, tp_FileName);
extern void SymLink(boolean *, tp_FileName, tp_FileName);
extern void FileName_SymLinkFileName(tp_FileName, tp_FileName);
extern boolean IsDirectory_FileName(tp_FileName);
extern boolean Exists(tp_FileName);
extern boolean Empty(tp_FileName);
extern void FileSize(boolean *, int *, tp_FileName);
extern void Remove(tp_FileName);
extern void RemoveDir(tp_FileName);
extern void Rename(boolean *, tp_FileName, tp_FileName);
/* if-io.c */
extern void Init_IO(void);
extern boolean GetIsTTY(void);
extern tp_FilDsc FileName_CFilDsc(tp_FileName);
extern tp_FilDsc FileName_WFilDsc(tp_FileName, boolean);
extern tp_FilDsc FileName_AFilDsc(tp_FileName, boolean);
extern tp_FilDsc FileName_RFilDsc(tp_FileName, boolean);
extern tp_FilDsc FileName_RWFilDsc(tp_FileName, boolean);
extern void Flush(tp_FilDsc);
extern void Rewind(tp_FilDsc);
extern void Unwind(tp_FilDsc);
extern void Close(tp_FilDsc);
extern boolean EndOfFile(tp_FilDsc);
extern void Write(tp_FilDsc, tp_Str);
extern void Writech(tp_FilDsc, int);
extern void WriteInt(tp_FilDsc, int);
extern void Writeln(tp_FilDsc, tp_Str);
extern void WriteLine(tp_FilDsc, tp_Str);
extern int Readch(tp_FilDsc);
extern tp_Str Readln(tp_Str, tp_FilDsc);
extern tp_Str ReadLine(tp_Str, tp_FilDsc);
extern int Equal(tp_FilDsc, tp_FilDsc);
extern void FileCopy(tp_FilDsc, tp_FilDsc);
/* if-nod.c */
extern tp_Nod New_Nod(void);
extern void Ret_Nod(tp_Nod);
extern tp_NodTyp Nod_NodTyp(tp_Nod);
extern void Set_Nod_NodTyp(tp_Nod, tp_NodTyp);
extern tp_Nod Nod_FirstSon(tp_Nod);
extern void Set_Nod_FirstSon(tp_Nod, tp_Nod);
extern tp_Nod Nod_Brother(tp_Nod);
extern void Set_Nod_Brother(tp_Nod, tp_Nod);
extern int Nod_NumSons(tp_Nod);
extern tp_Nod Nod_Son(int, tp_Nod);
extern tp_Sym Nod_Sym(tp_Nod);
extern void Set_Nod_Sym(tp_Nod, tp_Sym);
extern void Push_SymStack(tp_Sym);
extern void Init_ConstructTree(void);
extern tp_Nod End_ConstructTree(void);
extern void Action(int, int);
/* if-symbol.c */
extern tp_Str GetEnv(tp_Str);
extern tp_Str Malloc_Str(tp_Str);
extern boolean Is_EmptyStr(tp_Str);
extern int Str_PosInt(tp_Str);
extern tp_Str Tail(tp_Str);
extern void StrShift(tp_Str, int);
extern tp_Sym Str_Sym(tp_Str);
extern tp_Str Sym_Str(tp_Sym);
extern int Sym_Att(tp_Sym);
extern void Set_Sym_Att(tp_Sym, int);
extern void Write_Syms(tp_FilDsc);
